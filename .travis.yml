language: python
cache:
  directories:
    - $HOME/.cache/pip
python:
  - "2.7"
  - "3.5"
before_install:
  - sudo add-apt-repository --yes ppa:webupd8team/java
  - sudo apt-get update
  - pip install numpy scipy sympy cython==0.23.5 nose lxml matplotlib==1.5.0 pandas
  - sudo pip2 install numpy
install:
  # INDRA dependencies
  - sudo apt-get install libstdc++6
  - sudo apt-get install graphviz
  - sudo apt-get install oracle-java8-installer
  - sudo update-java-alternatives -s java-8-oracle
  - sudo apt-get install oracle-java8-set-default
  - export JAVA_HOME="/usr/lib/jvm/java-8-oracle/"
  - pip install pygraphviz pydot jsonschema coverage python-coveralls boto3 sqlalchemy psycopg2-binary pgcopy nose-timer kappy flask rdflib-jsonld
  - pip install doctest-ignore-unicode
  - pip install git+https://github.com/pybel/pybel.git@update-networkx
  - wget http://sorger.med.harvard.edu/data/bachman/Phosphorylation_site_dataset.tsv --directory-prefix=indra/resources/ -nv
  # PySB and dependencies
  - wget "http://www.csb.pitt.edu/Faculty/Faeder/wp-content/uploads/2017/04/BioNetGen-2.2.6-stable_Linux.tar.gz" -O bionetgen.tar.gz -nv
  - tar xzf bionetgen.tar.gz
  - export BNGPATH=`pwd`/BioNetGen-2.2.6-stable
  - pip install git+https://github.com/pysb/pysb.git
  # Biopax/Paxtools dependencies
  - pip install jnius-indra
  # Download a number of useful resource files for testing purposes
  - pip install .[machine]
  - cd indra/benchmarks/assembly_eval/batch4
  - wget http://sorger.med.harvard.edu/data/bachman/trips_reach_batch4.gz -nv
  - tar -xf trips_reach_batch4.gz
  - cd $TRAVIS_BUILD_DIR
  - wget http://sorger.med.harvard.edu/data/bachman/reach-82631d-biores-e9ee36.jar -nv
  - export REACHPATH=$TRAVIS_BUILD_DIR/reach-82631d-biores-e9ee36.jar
  # Get a daily updated Eidos jar for testing
  - wget http://sorger.med.harvard.edu/data/bgyori/eidos.jar -nv
  - export EIDOSPATH=$TRAVIS_BUILD_DIR/eidos.jar
  - pip install pycodestyle
  # TEES
  - if [[ "$TRAVIS_EVENT_TYPE" == "cron" ]]; then
        export RUN_SLOW=true;
    fi
  - |
    if [[ $RUN_SLOW == "true" ]]; then
        sudo apt-get --yes install ruby;
        wget -nv http://sorger.med.harvard.edu/data/bgyori/TEES.tar.bz2;
        tar xjf TEES.tar.bz2;
        mv TEES ~/TEES;
    fi
  - pip install networkx==2.1
before_script:
  # Enable plotting on fake display
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3
script:
  - export TEES_SETTINGS=~/TEES/tees_local_settings.py
  - export PYTHONPATH=$PYTHONPATH:$TRAVIS_BUILD_DIR
  - export _JAVA_OPTIONS="-Xmx4g -Xms1g"
  # Run standard unit tests
  - cd $TRAVIS_BUILD_DIR
  # These are files that are ignored so that doctests don't fail
  - export NOSE_IGNORE_FILES="find_full_text_sentence.py";
  # These files are ignored in Python 2 because they only work in Python 3 and
  # doctests on Travis would otherwise fail
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
        export NOSE_IGNORE_FILES=$NOSE_IGNORE_FILES,"content_manager.py,build_sample_set.py,_require_python3.py";
    fi
  - export NOSEATTR="";
  - if [[ $TRAVIS_PULL_REQUEST ]]; then
      export NOSEATTR="!nonpublic";
    fi
  - if [[ $RUN_SLOW != "true" ]]; then
      export NOSEATTR="!slow,$NOSEATTR";
    fi
  # First run TEES and Eidos tests separately for technical reasons
  - nosetests -v -a $NOSEATTR --process-restartworker indra/tests/test_tees.py
  - nosetests -v -a $NOSEATTR indra/tests/test_eidos.py
  # Now run all INDRA tests
  - nosetests indra -v -a $NOSEATTR
        --exclude='.*tees.*' --exclude='.*eidos.*'
        --with-coverage --cover-inclusive --cover-package=indra
        --with-doctest --with-doctest-ignore-unicode
        --with-timer --timer-top-n 10
  # Run NL model examples only when the environmental variable
  # RUN_NL_MODELS is set to true in the Travis build
  # NOTE: if blocks in Travis DO NOT FAIL even if there is
  # and error in one of the commands inside. Therefore passing
  # alone does not mean that all the operations inside were
  # successful. Rather, the log needs to be inspected and compared
  # to desired behavior.
  - |
    if [ $RUN_NL_MODELS == "true" ]; then
        cd $TRAVIS_BUILD_DIR/models
        python hello_indra.py
        cd $TRAVIS_BUILD_DIR/models/p53_model
        python run_p53_model.py noplot
        cd $TRAVIS_BUILD_DIR/models/braf_model
        python assemble_model.py
        cd $TRAVIS_BUILD_DIR/models/ras_pathway
        python run_ras_pathway.py trips
     fi
  # Run assembly benchmarks
  - cd $TRAVIS_BUILD_DIR/indra/benchmarks/assembly_eval/batch4
  - python run_combined.py
  - cd $TRAVIS_BUILD_DIR
  # Run code style report on diff
  - git remote set-branches --add origin master
  - git fetch
  - git diff origin/master | pycodestyle --diff > pep8.txt; cat pep8.txt;
after_success:
  - coveralls
